apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.firebase.firebase-perf'

def useReleaseKeystore = rootProject.file("signing/app-release.jks").exists()

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId build_versions.appId
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.versionCode
        versionName build_versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'API_BASE_URL', propOrDef("MOOP_API_BASE_URL", "")
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("signing/app-debug.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
        release {
            if (useReleaseKeystore) {
                storeFile rootProject.file("signing/app-release.jks")
                storePassword propOrDef('storePassword', "")
                keyAlias propOrDef('keyAlias', "")
                keyPassword propOrDef('keyPassword', "")
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"

            def filesAuthorityValue = 'soup.movie.debug.shareprovider'
            buildConfigField 'String', 'FILES_AUTHORITY', "\"${filesAuthorityValue}\""
            manifestPlaceholders = [
                    filesAuthority: filesAuthorityValue,
                    crashlytics_enabled: false
            ]
        }
        release {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            def filesAuthorityValue = 'soup.movie.shareprovider'
            buildConfigField 'String', 'FILES_AUTHORITY', "\"${filesAuthorityValue}\""
            manifestPlaceholders = [
                    filesAuthority: filesAuthorityValue,
                    crashlytics_enabled: true
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        features = ["parcelize"]
    }
}

dependencies {
    implementation project(':data')
    implementation project(':widget')
    implementation project(':theme')

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.kotlin.stdlib

    implementation deps.androidx.activity_ktx
    implementation deps.androidx.appcompat
    implementation deps.androidx.browser
    implementation deps.androidx.core_ktx
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.drawerlayout
    implementation deps.androidx.fragment_ktx
    implementation deps.androidx.preference_ktx
    implementation deps.androidx.recyclerview
    implementation deps.androidx.transition
    implementation deps.androidx.material
    implementation deps.androidx.viewpager2

    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.livedata_ktx
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.runtime_ktx
    kapt deps.lifecycle.compiler

    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.compiler
    kapt deps.dagger.android_processor

    implementation deps.work.runtime
    implementation deps.work.rxjava2
    implementation deps.work.gcm
    androidTestImplementation deps.work.testing

    implementation deps.rx.java2
    implementation deps.rx.kotlin
    implementation deps.rx.android

    implementation deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.firebase.core
    implementation deps.firebase.crashlytics
    implementation deps.firebase.performance
    implementation deps.firebase.messaging

    debugImplementation deps.stetho.core
    debugImplementation deps.stetho.okhttp3
    implementation deps.util.okhttp_interceptor
    implementation deps.util.timber
    implementation deps.util.threetenabp

    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
    implementation 'com.robinhood.ticker:ticker:2.0.0'
    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.0'
    implementation 'com.kakao.sdk:kakaolink:1.14.0'
    implementation 'me.everything:overscroll-decor-android:1.0.4'

    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.naver.maps:map-sdk:3.5.0'

    implementation 'com.google.android.play:core-ktx:1.6.4'

    testImplementation deps.test.junit
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso
}

if (file("google-services.json").exists()) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'io.fabric'
}
