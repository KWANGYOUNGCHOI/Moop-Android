apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

apply from: rootProject.file('gradle/android.gradle')

android.dataBinding.enabled = true
android.buildTypes.release {
    consumerProguardFiles 'proguard-rules-navigation.pro'
}

dependencies {
    implementation project(':model')

    implementation deps.kotlin.stdlib

    implementation deps.androidx.activity_ktx
    implementation deps.androidx.appcompat
    implementation deps.androidx.browser
    implementation deps.androidx.core_ktx
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.fragment_ktx
    implementation deps.androidx.material
    implementation deps.androidx.recyclerview

    implementation deps.navigation.fragment_ktx

    implementation deps.dagger.runtime
    implementation deps.dagger.android_support
    kapt deps.dagger.compiler
    kapt deps.dagger.android_processor

    implementation deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.firebase.dynamic_links
    implementation deps.firebase.ads

    api deps.util.threetenabp
    implementation deps.util.timber

    implementation 'com.kakao.sdk:kakaolink:1.14.0'

    testImplementation deps.test.junit
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = [
                '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi'
        ]
    }
}

task buildNavigationProguard doLast {
    def navigationGraphXml = project.file("src/main/res/navigation/nav_graph.xml")

    // XmlParser didn't work so let me use the dirty hack
    if (!navigationGraphXml.text.contains("xmlns:app=\"http://schemas.android.com/apk/res-auto\"")) {
        throw new GradleScriptException("the namespace has been changed from app")
    }

    def fqdns = []

    navigationGraphXml.eachLine {
        def line = it.trim()

        if (line.startsWith("android:name=\"")) {
            def className = line.substring("android:name=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        } else if (line.startsWith("app:argType=\"")) {
            def className = line.substring("app:argType=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        }
    }

    project.file("proguard-rules-navigation.pro").write(fqdns.sort().collect {
        "-keepnames class $it"
    }.join("\n"))
}

preBuild.dependsOn(buildNavigationProguard)
