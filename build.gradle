apply from: file('gradle/utils.gradle')

buildscript { 
    ext.kotlin_version = '1.3.61'

    apply from: 'versions.gradle'
    repositories {
        google()
        jcenter()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath deps.android_gradle_plugin
        classpath deps.kotlin.plugin
        classpath deps.navigation.safe_args_plugin
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'io.fabric.tools:gradle:1.31.0'
        classpath deps.firebase.perf_plugin
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com/' }
        maven { url 'http://devrepo.kakao.com:8088/nexus/content/groups/public/' }
        maven { url 'https://navercorp.bintray.com/maps' }
    }
    plugins.whenPluginAdded {
        if (it.isAndroidApp() || it.isAndroidLibrary() || it.isDynamicFeature()) {
            android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

Object propOrDef(String propertyName, Object defaultValue) {
    def properties = new Properties()
    def keyFile = rootProject.file("signing/key.properties")
    if (keyFile.exists()) {
        keyFile.withInputStream { stream -> properties.load(stream) }
    }
    def propertyValue = properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}
